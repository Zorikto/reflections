What happens when you initialize a repository? Why do you need to do it?

When we initialize a repository GIT creates hidden files which contains metadata
to track changes in our folder, and we now able to commit files.
We need to do it to be able to track files in this folder

How is the staging area different from the working directory and the repository?
What value do you think it offers?
Staging area is like buffer between wd and repo.
It offers opportunity to add changes according to logical queue.


How can you use the staging area to make sure you have one commit per logical
change?
I can check differences between staged and most recent commit, or even between
current file and staged file


What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
The situation when I need few versions of my main project could be easily managed
with branches

How do the diagrams help you visualize the branch structure?
It helps to overview whole commits history

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
The result is that we can combine result of workflows
We use diagram in order to make easy understand history of changes

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
During manual merge I have more control and can fix conflicts
