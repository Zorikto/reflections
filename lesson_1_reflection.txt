How did viewing a diff between two versions of a file help you see the bug that
was introduced?

  1. It saves time
  2. Allows to focus on differences, because difference itself could be a bug
  3. Makes easier to find bug

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

  1. It will allow me trace my progress
  2. It will allow me to learn from my mistakes
  3. It will save my time spend on coding
  4. It will help me to fix bugs

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

  Pros:
  1. You have control over size and frequency of commits
  2. Your commits will be more logically legit
  3. You can break down your work into logic steps
  4. It will be easier to work on versions later

  Cons:
  1. Possibly you will forget to commit on right time
  2. You have to be conscious all the time
  3. It can break your focus on work

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    It is very convenient when you are working on big project,
    and you have a lot of files which are related to each other.

How can you use the commands git log and git diff to view the history of files?

    I can use git log command to see all commits and comments to them
    With command git diff I can compare 2 commits

How might using version control make you more confident to make changes that
could break something?

    It makes me confident allowing me to trace and find any bug made in the past

Now that you have your workspace set up, what do you want to try using Git for?

    1. Build my portfolio
    2. Track all my programming projects
    3. Practice to make Git my default tool
